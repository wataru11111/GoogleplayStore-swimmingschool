##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#     |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#     |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Messaging
#    This is the public Twilio REST API.
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#


module Twilio
    module REST
        class Messaging < MessagingBase
            class V1 < Version
                class RequestManagedCertList < ListResource
                
                    ##
                    # Initialize the RequestManagedCertList
                    # @param [Version] version Version that contains the resource
                    # @return [RequestManagedCertList] RequestManagedCertList
                    def initialize(version)
                        super(version)
                        # Path Solution
                        @solution = {  }
                        
                        
                    end
                


                    # Provide a user friendly representation
                    def to_s
                        '#<Twilio.Messaging.V1.RequestManagedCertList>'
                    end
                end


                class RequestManagedCertContext < InstanceContext
                    ##
                    # Initialize the RequestManagedCertContext
                    # @param [Version] version Version that contains the resource
                    # @param [String] domain_sid Unique string used to identify the domain that this certificate should be associated with.
                    # @return [RequestManagedCertContext] RequestManagedCertContext
                    def initialize(version, domain_sid)
                        super(version)

                        # Path Solution
                        @solution = { domain_sid: domain_sid,  }
                        @uri = "/LinkShortening/Domains/#{@solution[:domain_sid]}/RequestManagedCert"

                        
                    end
                    ##
                    # Update the RequestManagedCertInstance
                    # @return [RequestManagedCertInstance] Updated RequestManagedCertInstance
                    def update

                        headers = Twilio::Values.of({'Content-Type' => 'application/x-www-form-urlencoded', })
                        
                        
                        
                        
                        
                        payload = @version.update('POST', @uri, headers: headers)
                        RequestManagedCertInstance.new(
                            @version,
                            payload,
                            domain_sid: @solution[:domain_sid],
                        )
                    end


                    ##
                    # Provide a user friendly representation
                    def to_s
                        context = @solution.map{|k, v| "#{k}: #{v}"}.join(',')
                        "#<Twilio.Messaging.V1.RequestManagedCertContext #{context}>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        context = @solution.map{|k, v| "#{k}: #{v}"}.join(',')
                        "#<Twilio.Messaging.V1.RequestManagedCertContext #{context}>"
                    end
                end

                class RequestManagedCertPage < Page
                    ##
                    # Initialize the RequestManagedCertPage
                    # @param [Version] version Version that contains the resource
                    # @param [Response] response Response from the API
                    # @param [Hash] solution Path solution for the resource
                    # @return [RequestManagedCertPage] RequestManagedCertPage
                    def initialize(version, response, solution)
                        super(version, response)

                        # Path Solution
                        @solution = solution
                    end

                    ##
                    # Build an instance of RequestManagedCertInstance
                    # @param [Hash] payload Payload response from the API
                    # @return [RequestManagedCertInstance] RequestManagedCertInstance
                    def get_instance(payload)
                        RequestManagedCertInstance.new(@version, payload)
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        '<Twilio.Messaging.V1.RequestManagedCertPage>'
                    end
                end
                class RequestManagedCertInstance < InstanceResource
                    ##
                    # Initialize the RequestManagedCertInstance
                    # @param [Version] version Version that contains the resource
                    # @param [Hash] payload payload that contains response from Twilio
                    # @param [String] account_sid The SID of the
                    #   {Account}[https://www.twilio.com/docs/iam/api/account] that created this RequestManagedCert
                    #   resource.
                    # @param [String] sid The SID of the Call resource to fetch.
                    # @return [RequestManagedCertInstance] RequestManagedCertInstance
                    def initialize(version, payload , domain_sid: nil)
                        super(version)
                        
                        # Marshaled Properties
                        @properties = { 
                            'domain_sid' => payload['domain_sid'],
                            'date_updated' => Twilio.deserialize_iso8601_datetime(payload['date_updated']),
                            'date_created' => Twilio.deserialize_iso8601_datetime(payload['date_created']),
                            'date_expires' => Twilio.deserialize_iso8601_datetime(payload['date_expires']),
                            'domain_name' => payload['domain_name'],
                            'certificate_sid' => payload['certificate_sid'],
                            'url' => payload['url'],
                            'managed' => payload['managed'],
                            'requesting' => payload['requesting'],
                        }

                        # Context
                        @instance_context = nil
                        @params = { 'domain_sid' => domain_sid  || @properties['domain_sid']  , }
                    end

                    ##
                    # Generate an instance context for the instance, the context is capable of
                    # performing various actions.  All instance actions are proxied to the context
                    # @return [RequestManagedCertContext] CallContext for this CallInstance
                    def context
                        unless @instance_context
                            @instance_context = RequestManagedCertContext.new(@version , @params['domain_sid'])
                        end
                        @instance_context
                    end
                    
                    ##
                    # @return [String] The unique string that we created to identify the Domain resource.
                    def domain_sid
                        @properties['domain_sid']
                    end
                    
                    ##
                    # @return [Time] Date that this Domain was last updated.
                    def date_updated
                        @properties['date_updated']
                    end
                    
                    ##
                    # @return [Time] Date that this Domain was registered to the Twilio platform to create a new Domain object.
                    def date_created
                        @properties['date_created']
                    end
                    
                    ##
                    # @return [Time] Date that the private certificate associated with this domain expires. This is the expiration date of your existing cert.
                    def date_expires
                        @properties['date_expires']
                    end
                    
                    ##
                    # @return [String] Full url path for this domain.
                    def domain_name
                        @properties['domain_name']
                    end
                    
                    ##
                    # @return [String] The unique string that we created to identify this Certificate resource.
                    def certificate_sid
                        @properties['certificate_sid']
                    end
                    
                    ##
                    # @return [String] 
                    def url
                        @properties['url']
                    end
                    
                    ##
                    # @return [Boolean] A boolean flag indicating if the certificate is managed by Twilio.
                    def managed
                        @properties['managed']
                    end
                    
                    ##
                    # @return [Boolean] A boolean flag indicating if a managed certificate needs to be fulfilled by Twilio.
                    def requesting
                        @properties['requesting']
                    end
                    
                    ##
                    # Update the RequestManagedCertInstance
                    # @return [RequestManagedCertInstance] Updated RequestManagedCertInstance
                    def update

                        context.update
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
                        "<Twilio.Messaging.V1.RequestManagedCertInstance #{values}>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
                        "<Twilio.Messaging.V1.RequestManagedCertInstance #{values}>"
                    end
                end

            end
        end
    end
end
